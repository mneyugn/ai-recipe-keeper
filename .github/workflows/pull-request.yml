name: Pull Request Checks

on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: 🔬 Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: 📦 Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧹 Run linter
        run: npm run lint

  unit-test:
    name: 🧪 Unit Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📊 Run unit tests with coverage
        run: npm run test:coverage

      - name: 📤 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  e2e-test:
    name: 🌐 E2E Test
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: 🚀 Run E2E tests
        run: npm run e2e
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          TEST_BASE_URL: ${{ secrets.TEST_BASE_URL }}
          E2E_USER_ID: ${{ secrets.E2E_USER_ID }}
          E2E_EMAIL: ${{ secrets.E2E_EMAIL }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}

      - name: 📤 Upload E2E report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: playwright-report/

  status-comment:
    name: 💬 Status Comment
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: 📝 Post success comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ✅ All checks passed!

            - **Lint**: Succeeded
            - **Unit Tests**: Succeeded
            - **E2E Tests**: Succeeded

            Build artifacts:
            - [Coverage Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)
            - [E2E Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)

            Ready for review.
