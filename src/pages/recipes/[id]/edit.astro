---
export const prerender = false;

import AppLayout from "@/layouts/AppLayout.astro";
import RecipeForm from "@/components/RecipeForm.tsx";
import type { RecipeDetailDTO } from "@/types";
import { RecipeService } from "@/lib/modules/recipe";
import { createRequestContainer } from "@/lib/core/container";

const { id: recipeId } = Astro.params;

// check authentication
const { user } = Astro.locals;
const userId = user?.id;

if (!userId) {
  return Astro.redirect("/auth/login");
}

let recipeData: RecipeDetailDTO | null = null;
let error: string | null = null;

if (recipeId) {
  try {
    const container = createRequestContainer(Astro);
    const recipeService = container.resolve(RecipeService);

    recipeData = await recipeService.getRecipeDetails(recipeId, userId);
  } catch (e) {
    console.error("Error fetching recipe:", e);

    if (e instanceof Error) {
      if (e.message.includes("nie został znaleziony") || e.message.includes("Brak uprawnień")) {
        return Astro.redirect("/recipes");
      }
      error = e.message;
    } else {
      error = "Wystąpił problem podczas ładowania przepisu.";
    }
  }
} else {
  error = "Brak ID przepisu do edycji.";
}
---

<AppLayout title={recipeData ? `Edytuj przepis: ${recipeData.name}` : `Edytuj przepis ${recipeId}`}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <h1 class="text-3xl font-bold mb-6 text-foreground">
      {recipeData ? `Edytuj przepis: ${recipeData.name}` : `Edytuj przepis ${recipeId}`}
    </h1>
    {/* Basic rendering for now - will add conditionals back */}
    <RecipeForm client:load mode="edit" recipeId={recipeId} recipeData={recipeData} />
    {error && <p class="text-destructive bg-destructive/10 border border-destructive/20 rounded-lg p-3">{error}</p>}
  </div>
</AppLayout>
