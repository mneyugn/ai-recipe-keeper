---
import AppLayout from "../../../layouts/AppLayout.astro";
import type { RecipeDetailDTO } from "../../../types";
import { RecipeService } from "../../../lib/modules/recipe/recipe.service";

export const prerender = false;

// get ID from URL parameters
const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/recipes");
}

// check authentication
const { user } = Astro.locals;
const userId = user?.id;

if (!userId) {
  return Astro.redirect("/auth/login");
}

// fetch recipe details
let recipe: RecipeDetailDTO | null = null;
let error: string | null = null;

try {
  const supabase = Astro.locals.supabase;
  const recipeService = new RecipeService(supabase);

  recipe = await recipeService.getRecipeDetails(id, userId);
} catch (e) {
  console.error("Error fetching recipe:", e);

  if (e instanceof Error) {
    if (e.message.includes("nie został znaleziony") || e.message.includes("Brak uprawnień")) {
      return Astro.redirect("/recipes");
    }
    error = e.message;
  } else {
    error = "Błąd podczas ładowania przepisu";
  }
}
---

<AppLayout title={recipe?.name ? `${recipe.name} - AI RecipeKeeper` : "Przepis - AI RecipeKeeper"}>
  {/* header with navigation */}
  <header class="bg-surface border-b border-border -mx-4 lg:-mx-6">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <nav class="flex items-center justify-between">
        <a
          href="/recipes"
          class="inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Powrót do listy przepisów
        </a>

        {
          recipe && (
            <a
              href={`/recipes/${recipe.id}/edit`}
              class="inline-flex items-center px-4 py-2 text-sm font-medium text-primary-foreground bg-primary hover:bg-primary-dark rounded-md transition-colors shadow-sm hover:shadow-md"
            >
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                />
              </svg>
              Edytuj przepis
            </a>
          )
        }
      </nav>
    </div>
  </header>

  <main class="max-w-4xl mx-auto py-8">
    {
      error ? (
        <div class="bg-destructive/10 border border-destructive/20 rounded-xl p-6">
          <div class="flex items-center">
            <svg class="w-5 h-5 text-destructive mr-3" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                clip-rule="evenodd"
              />
            </svg>
            <h3 class="text-lg font-medium text-destructive">Błąd</h3>
          </div>
          <p class="mt-2 text-destructive/80">{error}</p>
        </div>
      ) : recipe ? (
        <article class="bg-card/95 backdrop-blur-sm rounded-xl shadow-lg border border-border/50 overflow-hidden">
          {/* recipe image */}
          {recipe.image_url && (
            <div class="aspect-w-16 aspect-h-9 bg-muted">
              <img src={recipe.image_url} alt={recipe.name} class="w-full h-64 object-cover" loading="lazy" />
            </div>
          )}

          <div class="p-6 sm:p-8">
            {/* recipe header */}
            <header class="mb-6">
              <h1 class="text-3xl font-bold text-foreground mb-4">{recipe.name}</h1>

              {/* metadata */}
              <div class="flex flex-wrap items-center gap-4 text-sm text-muted-foreground">
                {recipe.preparation_time && (
                  <div class="flex items-center">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                      />
                    </svg>
                    {recipe.preparation_time}
                  </div>
                )}

                <div class="flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                    />
                  </svg>
                  {new Date(recipe.created_at).toLocaleDateString("pl-PL")}
                </div>
              </div>

              {/* tags */}
              {recipe.tags.length > 0 && (
                <div class="mt-4">
                  <div class="flex flex-wrap gap-2">
                    {recipe.tags.map((tag) => (
                      <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary border border-primary/20 hover:bg-primary/15 transition-colors">
                        {tag.name}
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </header>

            {/* ingredients */}
            <section class="mb-8">
              <h2 class="text-xl font-semibold text-foreground mb-4">Składniki</h2>
              <ul class="space-y-3">
                {recipe.ingredients.map((ingredient) => (
                  <li class="flex items-start text-card-foreground">
                    <span class="inline-block w-2 h-2 bg-primary rounded-full mt-2 mr-3 flex-shrink-0" />
                    {ingredient}
                  </li>
                ))}
              </ul>
            </section>

            {/* steps */}
            <section class="mb-8">
              <h2 class="text-xl font-semibold text-foreground mb-4">Sposób przygotowania</h2>
              <ol class="space-y-4">
                {recipe.steps.map((step, index) => (
                  <li class="flex items-start text-card-foreground">
                    <span class="inline-flex items-center justify-center w-6 h-6 bg-primary text-primary-foreground text-sm font-medium rounded-full mr-4 flex-shrink-0 mt-0.5">
                      {index + 1}
                    </span>
                    <div class="flex-1">{step}</div>
                  </li>
                ))}
              </ol>
            </section>

            {/* notes */}
            {recipe.notes && (
              <section class="mb-8">
                <h2 class="text-xl font-semibold text-foreground mb-4">Notatki</h2>
                <div class="bg-warning/10 border border-warning/20 rounded-xl p-4">
                  <p class="text-card-foreground whitespace-pre-wrap">{recipe.notes}</p>
                </div>
              </section>
            )}

            {/* source */}
            {recipe.source_url && (
              <section>
                <h2 class="text-xl font-semibold text-foreground mb-4">Źródło</h2>
                <a
                  href={recipe.source_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-accent hover:text-accent-light transition-colors underline decoration-accent/30 hover:decoration-accent/60"
                >
                  {recipe.source_url}
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                    />
                  </svg>
                </a>
              </section>
            )}
          </div>
        </article>
      ) : (
        <div class="bg-card/95 backdrop-blur-sm rounded-xl shadow-lg border border-border/50 p-8 text-center">
          <div class="animate-shimmer">
            <div class="h-4 bg-muted rounded w-1/4 mx-auto mb-4" />
            <div class="h-4 bg-muted rounded w-1/2 mx-auto" />
          </div>
        </div>
      )
    }
  </main>
</AppLayout>
