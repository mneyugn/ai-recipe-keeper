---
import AppLayout from "../../layouts/AppLayout.astro";
import RecipeListContainer from "../../components/RecipeListContainer";
import type { RecipeListQueryParams } from "../../types";

// get user ID from middleware (authentication checked in middleware)
const { user } = Astro.locals;
const userId = user?.id;

if (!userId) {
  return Astro.redirect("/auth/login");
}

// parse URL parameters
const url = new URL(Astro.request.url);
const initialParams: RecipeListQueryParams = {
  page: Number(url.searchParams.get("page")) || 1,
  limit: Math.min(Number(url.searchParams.get("limit")) || 20, 100),
  sort: (url.searchParams.get("sort") as RecipeListQueryParams["sort"]) || "created_at:desc",
  tag: url.searchParams.get("tags") || undefined,
};

// validate parameters
if (initialParams.page && initialParams.page < 1) initialParams.page = 1;
if (initialParams.limit && (initialParams.limit < 1 || initialParams.limit > 100)) initialParams.limit = 20;

const validSortOptions = ["created_at:asc", "created_at:desc", "name:asc", "name:desc"];
if (initialParams.sort && !validSortOptions.includes(initialParams.sort)) {
  initialParams.sort = "created_at:desc";
}
---

<AppLayout title="Moje Przepisy - AI RecipeKeeper">
  <RecipeListContainer initialParams={initialParams} userId={userId} client:load />
</AppLayout>
